version: 1.0.{build}
image: Visual Studio 2017
platform: Any CPU
environment:
  matrix:
  - platform: x64
    CONFIG: vs2017-x64.r
    DEBUG: "YES"
    OPTIMIZE: "NO"
    STANDARD: "C++14"
    TARGET: "EXECUTION"
    EXTENSIONS: "[]"
  - platform: Win32
    CONFIG: vs2017-x86.r
    DEBUG: "YES"
    OPTIMIZE: "NO"
    STANDARD: "C++14"
    TARGET: "VISUAL-STUDIO"
    EXTENSIONS: "[]"
  - platform: x64
    CONFIG: vs2017-x64.r
    DEBUG: "YES"
    OPTIMIZE: "NO"
    STANDARD: "C++"
    TARGET: "NMAKE"
    EXTENSIONS: "configs/zero-ext.r"
  - platform: Win32
    CONFIG: vs2017-x86.r
    DEBUG: "YES"
    OPTIMIZE: "NO"
    STANDARD: "C++"
    TARGET: "EXECUTION"
    EXTENSIONS: "configs/all-ext-dynamic.r"
  - platform: x64
    CONFIG: vs2017-x64.r
    DEBUG: "NO"
    OPTIMIZE: "2"
    STANDARD: "C"
    TARGET: "VISUAL-STUDIO"
    EXTENSIONS: "configs/all-ext-dynamic.r"
  - platform: Win32
    CONFIG: vs2017-x86.r
    DEBUG: "NO"
    OPTIMIZE: "2"
    STANDARD: "C"
    TARGET: "NMAKE"
    EXTENSIONS: "[]"
  - platform: x64
    CONFIG: vs2017-x64.r
    DEBUG: "NO"
    OPTIMIZE: "2"
    STANDARD: "C"
    TARGET: "VISUAL-STUDIO"
    EXTENSIONS: "configs/zero-ext.r"
  - platform: Win32
    CONFIG: vs2017-x86.r
    DEBUG: "NO"
    OPTIMIZE: "2"
    STANDARD: "C"
    TARGET: "NMAKE"
    EXTENSIONS: "configs/all-ext-dynamic.r"
  - platform: x64
    CONFIG: vs2017-x64.r
    DEBUG: "YES"
    OPTIMIZE: "NO"
    STANDARD: "C"
    TARGET: "EXECUTION"
    EXTENSIONS: "configs/zero-ext.r"

build_script:
- ps: >-
    cd make

    pushd "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build"

    If ($Env:platform -eq "x64") {
        $batch="vcvars64.bat&set"
    } Else {
        $batch="vcvars32.bat&set"
    }
    cmd /c $batch |
    foreach {
        if ($_ -match "=") {
            $v = $_.split("="); set-item -force -path "ENV:\$($v[0])"  -value "$($v[1])"
        }
    }

    popd

    .\r3-make.exe make.r CONFIG=configs/$Env:CONFIG DEBUG=$Env:DEBUG STANDARD=$Env:STANDARD TARGET=$Env:TARGET OPTIMIZE=$Env:OPTIMIZE EXTENSIONS=$Env:EXTENSIONS

    If ($Env:TARGET -eq "VISUAL-STUDIO") {
        If ($Env:DEBUG -eq "NO") {
            $config="Release"
        } Else {
            $config="Debug"
        }
        msbuild prep.vcxproj "/p:Configuration=$config;Platform=$Env:platform"
        msbuild top.vcxproj "/p:Configuration=$config;Platform=$Env:platform"
    } Elseif ($Env:TARGET -eq "NMAKE") {
        nmake /NOLOGO prep
        nmake /NOLOGO folders
        nmake /NOLOGO top
    }

    If ($Env:STANDARD -eq "C++14" -And $Env:DEBUG -eq "YES") {
        If ($Env:TARGET -eq "VISUAL-STUDIO") {
            main.dir\Debug\r3.exe ../tests/run-recover.r
        } Else {
            .\r3.exe ../tests/run-recover.r
        }
        Write-Host "Test Log:"
        Get-Content ..\tests\r_*.log
    }
